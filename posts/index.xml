<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Devflection</title>
    <link>https://devflection.com/posts/</link>
    <description>Recent content in Posts on Devflection</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>matija@devflection.com (Matija Heričko)</managingEditor>
    <webMaster>matija@devflection.com (Matija Heričko)</webMaster>
    <lastBuildDate>Thu, 18 Apr 2019 08:00:00 +0200</lastBuildDate>
    
	<atom:link href="https://devflection.com/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Reflection in Java</title>
      <link>https://devflection.com/posts/2019-04-18-reflection-in-java/</link>
      <pubDate>Thu, 18 Apr 2019 08:00:00 +0200</pubDate>
      <author>matija@devflection.com (Matija Heričko)</author>
      <guid>https://devflection.com/posts/2019-04-18-reflection-in-java/</guid>
      <description>Introduction Reflection is the ability of an application to inspect and modify the code in the system.
If an application can only inspect but not also modify the code then it only has the ability of introspection.
So for an application to be reflective it must also be able to modify its code at runtime.
Java is a language that supports reflection which allows us to do some nice things, such as examine classes at runtime, create instances of the class, look at its fields and methods, and modify or execute them without knowing anything about the classes in advance at compile time.</description>
    </item>
    
  </channel>
</rss>